variables:
- group: td.deploy

jobs:
  - job: BuildModule

    pool:
      vmImage: vs2017-win2016

    steps:
      - task: NuGetToolInstaller@0
        inputs:
          checkLatest: true
  
      - task: DownloadSecureFile@1
        displayName: 'Download secure file'
        inputs:
          secureFile: '4b113b89-08c3-4d7c-9326-d06d36fe045d'

      - pwsh: ./build.ps1
        displayName: 'Build and Test'
        condition: and(succeeded(), ne(variables['BuildType'], 'release') )
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          CertPassword: $(CertPassword)

      - pwsh: ./build.ps1 -Publish $true
        displayName: 'Build, Test and Publish'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.Reason'], 'Schedule'), eq(variables['BuildType'], 'release') )
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
          CertPassword: $(CertPassword)
      
      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit"
          testResultsFiles: "**/Test-*.xml"
          testRunTitle: "Unit Tests"
          failTaskOnFailedTests: true
        displayName: 'Publish Test Results **/Test-*.xml'
        condition: succeededOrFailed()
                
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          PathtoPublish: output
          ArtifactName: drop
          publishLocation: Container
          Parallel: true
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.Reason'], 'Schedule'), eq(variables['BuildType'], 'release') )